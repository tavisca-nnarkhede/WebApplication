pipeline{
  agent any
  parameters{
            choice(
                    choices: ['BUILD' , 'TEST' , 'PUBLISH'],
                    name: 'CHOSEN_ACTION')
            string(
                    name: 'GIT_PATH',
                    defaultValue: 'https://github.com/tavisca-dmandal/WebApplicationHi.git')
            string(
                    name: 'SOLUTION_FILE_PATH',
                    defaultValue: 'WebApplicationHi.sln')
            string(
              name: 'TEST_PROJECT_PATH',
              defaultValue: 'WebApiTest/WebApiTest.csproj')
            string(
              name: 'NETCORE_VERSION',
              defaultValue: '')
          }
  stages{
          stage('Build')
          {
            when 
            {
                expression {params.CHOSEN_ACTION=='BUILD' ||  params.CHOSEN_ACTION=='TEST' ||  params.CHOSEN_ACTION=='PUBLISH'}
            }
            steps
            {
                powershell '''dotnet${NETCORE_VERSION} restore ${SOLUTION_FILE_PATH} --source https://api.nuget.org/v3/index.json
              dotnet${NETCORE_VERSION} build ${SOLUTION_PATH_FILE} -p:CONFIGURATION=release -V:n'''
            }
          }
    stage('test')
    {
      when 
      {
        expression { params.CHOSEN_ACTION=='TEST' ||  params.CHOSEN_ACTION=='PUBLISH'}
      }
      steps
      {
        powershell 'dotnet${NETCORE_VERSION} test ${TEST_PROJECT_PATH}'
      }
    }
    stage('publish')
    {
      when 
      {
        expression {params.CHOSEN_ACTION=='PUBLISH'}
      }
      steps
      {
        powershell 'dotnet publish WebApplicationHi/WebApplicationHi.csproj'
      }
    }
    stage('Deploy')
    {
       when 
       {
        expression {params.CHOSEN_ACTION=='PUBLISH'}
       }
      steps
      {
        powershell 'docker build --tag=${DOCKER_IAMGE_NAME} -f Dockerfile .'
        powershell 'docker run -p 4000:80 ${DOCKER_IMAGE_NAME}'
      }
    }
  }
  post
  {
    always
    {
      deleteDir()
      powershell 'echo Release...'
    }
  }
}
